<idea-plugin version="2">
  <id>com.cegin.PUTVT</id>
  <name>PUTVT</name>
  <version>0.1</version>
  <vendor email="jan.cegin@gmail.com" url="xcegin.github.io">Jan Cegin</vendor>

  <description><![CDATA[
      <h1>PUTVT</h1>
      <h3>Python Unit Tests Visualization Tool</h3>
      <br>
      <p>This plugin is used for loading files with the logs of Pytest or Python
      failures/tracebacks and then visualizing them in the editor. This plugin also provides a Dependency Graph</p>
      <br>
      <p>Here are listed the actions, which will appear in the tools menu in IDE:</p>
      <ul>
      <li><b>Load and Visualize log .txt:</b> A windows will appear where if the file containing
      the logs is selected and then the Editor of the IDE is used for visualizing/highlighting
      the lines.</li>
      <li><b>Clear current View:</b> Clears the view for the current
      opened tab, after refreshing the visualization will be redrawn.</li>
      <li><b>Stop visualization:</b> Stops the visualization for all the files, keeping the settings, but not the
      so far visualized data.</li>
      <li><b>Visualize console logs:</b>Visualizes the logs from the internal IntelliJ console log. Logs are visualized,
       if any errors happened and are drawn when the editor tabs are opened/reopened.</li>
       <li><b>Listen for external jars:</b>Listens for external logs, which can be send through a UDP protocol on port
       9876 as 1024 bit words. These are then visualized.</li>
      </ul>
      <br>
      <p>Here are listed the actions which can be used on the Dependency Graph window.
      <ul>
      <li><b>Visualize coverage:</b> Creates a dependency Graph visualizing the actual coverage for all the modules (python
      files) of the project. The nodes are differently colorized according to their code coverage.</li>
      <li><b>Reset view:</b> Resets the view of the visualized graph - changes the focus.</li>
      <li><b>Clean canvas:</b> Cleans the canvas and reoves the entire visualization</li>
      </ul>
    ]]></description>

  <change-notes><![CDATA[
      V. 1.0:<br>
      <ul>
      <li>First version created, which supports Dependency Graph and error logs visualization.</li>
      </ul>
    ]]>
  </change-notes>

  <!-- Icons made by: http://www.flaticon.com/authors/icomoon and Hanan -->

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
  <idea-version since-build="162.0"/>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->

  <depends>com.intellij.modules.python</depends>

  <application-components>
    <component>
      <implementation-class>highlighter.ApplicationPlugin</implementation-class>
      <interface-class>highlighter.ApplicationPlugin</interface-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <implementation-class>highlighter.ProjectPlugin</implementation-class>
      <interface-class>highlighter.ProjectPlugin</interface-class>
    </component>
    <component>
      <implementation-class>highlighter.handlers.DisplayHandler</implementation-class>
      <interface-class>highlighter.handlers.DisplayHandler</interface-class>
    </component>
  </project-components>


  <extensions defaultExtensionNs="com.intellij">
    <toolWindow id="Dependency Graph"
                anchor="bottom"
                secondary="false"
                factoryClass="graph.pycharm.ConsoleToolWindow"
                icon="/icons/eye.png"/>
    <applicationService serviceInterface="graph.pycharm.api.LookAndFeelService"
                        serviceImplementation="graph.pycharm.services.IdeaLookAndFeelService"/>
    <projectService serviceInterface="graph.pycharm.GraphConsoleView"
                    serviceImplementation="graph.pycharm.GraphConsoleView"/>
    <testStatusListener implementation="graph.testresults.TestStatusListenerImpl"/>
  </extensions>

  <actions>
    <!-- Add your actions here -->
    <group id="PUTVT" text="Python Visualization Tool..." popup="true" icon="/icons/eye.png">
    <add-to-group group-id="ToolsMenu" anchor="first"/>
    <action id="PUTVT.highlighter.actions.VisualizationAction" class="highlighter.actions.VisualizationAction" text="Load and Visualize log .txt"
            description="Loads a .txt file and visualizes lines of code">
    </action>
      <action id="PUTVT.ConsoleNotUsed" class="highlighter.actions.console.ConsoleUnSetVisualizationAction" text="Stop visualizing console logs"
              description="Stops visualizing console logs">
      </action>
      <action id="PUTVT.ConsoleUsed" class="highlighter.actions.console.ConsoleSetVisualizationAction" text="Visualize console logs"
              description="Visualizes console logs">
      </action>
      <action id="PUTVT.ConsoleLogListener" class="highlighter.actions.externallogs.ListenForLogsAction" text="Listen for logs from external jar"
              description="Listen for logs from console commands redirected through provided jar">
      </action>
      <action id="PUTVT.StopListeningAction" class="highlighter.actions.externallogs.StopListeningAction" text="Stop listener for external jar"
              description="Stop listener for the external jar">
      </action>
      <action id="PUTVT.highlighter.actions.ClearVisualAction" class="highlighter.actions.ClearVisualAction" text="Clears current View"
              description="Clears out the visualization for the current editor">
      </action>
      <action id="PUTVT.highlighter.actions.ClearAllAction" class="highlighter.actions.ClearAllAction" text="Stop visualization"
              description="Clears out and stops the visualization">
      </action>
    </group>

    <action id="PUTVT.highlighter.actions.ErrorLinesShowAction" class="highlighter.actions.ErrorLinesShowAction" text="Show error lines..."
            description="Shows error lines for the line">
      <add-to-group group-id="EditorPopupMenu" anchor="last"/>
    </action>

    <group id="GraphDependencyConsoleViewActions"
           text="Graph Dependency Console Tool Window Actions">

      <action id="GraphDatabaseConsoleToolWindowActions.VisualizeCoverage"
              class="graph.actions.ExecuteResultAction"
              text="Visualize coverage"
              description="Visualize coverage"
              icon="/icons/play-arrow.png">
      </action>

      <action id="GraphDependencyConsoleViewActions.VisualizeCoverageOnly"
              class="graph.actions.ExecuteResultOnlyCoveragedAction"
              text="Visualizes only coveraged nodes with their relations"
              description="Visualizes only coveraged nodes with their relation"
              icon="/icons/fast-forward.png">
      </action>

      <action id="GraphDependencyConsoleViewActions.ZoomAndFit"
              class="graph.actions.ZoomAndFitAction"
              text="Reset view"
              description="Reset view"
              icon="/icons/loading.png">
      </action>

      <action id="GraphDependencyConsoleViewActions.CleanCanvas"
              class="graph.actions.CleanCanvasAction"
              text="Clean canvas"
              description="Clean canvas"
              icon="/icons/close.png">
      </action>

    </group>


  </actions>

</idea-plugin>